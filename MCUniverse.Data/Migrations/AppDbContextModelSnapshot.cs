// <auto-generated />
using System;
using MCUniverse.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MCUniverse.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CourseEntityStudent", b =>
                {
                    b.Property<int>("coursesId")
                        .HasColumnType("int");

                    b.Property<int>("studentsId")
                        .HasColumnType("int");

                    b.HasKey("coursesId", "studentsId");

                    b.HasIndex("studentsId");

                    b.ToTable("CourseEntityStudent");
                });

            modelBuilder.Entity("MCUniverse.Data.Entities.CourseEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Building")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClassDays")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<string>("EndTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FacultyId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomNumber")
                        .HasColumnType("int");

                    b.Property<int>("Semester")
                        .HasColumnType("int");

                    b.Property<string>("StartTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Building = "Philip Colson Memorial Hall",
                            ClassDays = "Monday, Wednesday, Friday",
                            Credits = 3,
                            EndTime = "10:00",
                            FacultyId = 1,
                            Name = "Saving the World 101",
                            RoomNumber = 201,
                            Semester = 1,
                            StartTime = "9:00"
                        },
                        new
                        {
                            Id = 2,
                            Building = "Philip Colson Memorial Hall",
                            ClassDays = "Wednesday",
                            Credits = 5,
                            EndTime = "11:00",
                            FacultyId = 2,
                            Name = "Metal Hearts 101",
                            RoomNumber = 201,
                            Semester = 1,
                            StartTime = "10:00"
                        },
                        new
                        {
                            Id = 3,
                            Building = "Falcon's Nest",
                            ClassDays = "Monday, Friday",
                            Credits = 3,
                            EndTime = "12:00",
                            FacultyId = 3,
                            Name = "I Am Groot",
                            RoomNumber = 125,
                            Semester = 2,
                            StartTime = "11:00"
                        },
                        new
                        {
                            Id = 4,
                            Building = "Philip Colson Memorial Hall",
                            ClassDays = "Tuesday, Thursday",
                            Credits = 3,
                            EndTime = "4:00",
                            FacultyId = 4,
                            Name = "Infinity Stones 201",
                            RoomNumber = 211,
                            Semester = 0,
                            StartTime = "2:15"
                        },
                        new
                        {
                            Id = 5,
                            Building = "Philip Colson Memorial Hall",
                            ClassDays = "Monday, Wednesday, Friday",
                            Credits = 3,
                            EndTime = "10:00",
                            FacultyId = 5,
                            Name = "Catch Phrases 301",
                            RoomNumber = 154,
                            Semester = 1,
                            StartTime = "9:00"
                        },
                        new
                        {
                            Id = 6,
                            Building = "Bifrost Keep",
                            ClassDays = "Thursday",
                            Credits = 7,
                            EndTime = "4:00",
                            FacultyId = 3,
                            Name = "Catch Phrases 101",
                            RoomNumber = 510,
                            Semester = 1,
                            StartTime = "3:00"
                        });
                });

            modelBuilder.Entity("MCUniverse.Data.Entities.Faculty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Faculties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "NickFury@MCUniversity.com",
                            FirstName = "Nicholas",
                            Gender = 0,
                            LastName = "Fury",
                            Password = "EyePatch",
                            PhoneNumber = "(555)-650-6639",
                            UserName = "NicholasFury"
                        },
                        new
                        {
                            Id = 2,
                            Email = "Thanos@MCUniversity.com",
                            FirstName = "Thanos",
                            Gender = 0,
                            LastName = "Purpleman",
                            Password = "50/50",
                            PhoneNumber = "(555)-242-3649",
                            UserName = "TheTitan"
                        },
                        new
                        {
                            Id = 3,
                            Email = "JaneFoster@MCUniversity.com",
                            FirstName = "Jane",
                            Gender = 1,
                            LastName = "Foster",
                            Password = "ThorsAHunk",
                            PhoneNumber = "(555)-242-1277",
                            UserName = "JaneFoster"
                        },
                        new
                        {
                            Id = 4,
                            Email = "AbrahamErskine@MCUniversity.com",
                            FirstName = "Abraham",
                            Gender = 0,
                            LastName = "Erskine",
                            Password = "AmericaForever",
                            PhoneNumber = "(555)-242-4847",
                            UserName = "AbrahamErskine"
                        },
                        new
                        {
                            Id = 5,
                            Email = "ProfSelvig@MCUniversity.com",
                            FirstName = "Professor",
                            Gender = 0,
                            LastName = "Selvig",
                            Password = "UnderwearMan",
                            PhoneNumber = "(555)-532-5100",
                            UserName = "ProfSelvig"
                        });
                });

            modelBuilder.Entity("MCUniverse.Data.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("OriginCountry")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "1600 Pennsylvania Ave NW",
                            DateCreated = new DateTime(2022, 7, 27, 19, 16, 38, 638, DateTimeKind.Local).AddTicks(4294),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(1876),
                            Email = "SteveRogers@MCUniversity.com",
                            FullName = "Steven Rogers",
                            Gender = "Male",
                            LastModified = new DateTime(2022, 7, 27, 19, 16, 38, 638, DateTimeKind.Local).AddTicks(4324),
                            OriginCountry = "United States of America",
                            Password = "FREEDOM",
                            PhoneNumber = "(555)-650-1234",
                            Username = "SteveRogers"
                        },
                        new
                        {
                            Id = 2,
                            Address = "846 Wakanda Ln",
                            DateCreated = new DateTime(2022, 7, 27, 19, 16, 38, 638, DateTimeKind.Local).AddTicks(4327),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(1866),
                            Email = "BuckyBoy@MCUniversity.com",
                            FullName = "Bucky Barnes",
                            Gender = "Male",
                            LastModified = new DateTime(2022, 7, 27, 19, 16, 38, 638, DateTimeKind.Local).AddTicks(4328),
                            OriginCountry = "United States of America",
                            Password = "Soldier76",
                            PhoneNumber = "(555)-514-6542",
                            Username = "BuckyBarnes"
                        },
                        new
                        {
                            Id = 3,
                            Address = "355 Taldore Dr",
                            DateCreated = new DateTime(2022, 7, 27, 19, 16, 38, 638, DateTimeKind.Local).AddTicks(4330),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(1950),
                            Email = "WingMan@MCUniversity.com",
                            FullName = "Samuel Wilson",
                            Gender = "Male",
                            LastModified = new DateTime(2022, 7, 27, 19, 16, 38, 638, DateTimeKind.Local).AddTicks(4331),
                            OriginCountry = "United States of America",
                            Password = "CapForever",
                            PhoneNumber = "(555)-675-2548",
                            Username = "SamWilly"
                        },
                        new
                        {
                            Id = 4,
                            Address = "658 Dog Breath Blvd",
                            DateCreated = new DateTime(2022, 7, 27, 19, 16, 38, 638, DateTimeKind.Local).AddTicks(4333),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(1988),
                            Email = "SpidyGuy@MCUniversity.com",
                            FullName = "Peter Parker",
                            Gender = "Male",
                            LastModified = new DateTime(2022, 7, 27, 19, 16, 38, 638, DateTimeKind.Local).AddTicks(4335),
                            OriginCountry = "United States of America",
                            Password = "SpiderGuy",
                            PhoneNumber = "(555)-654-9873",
                            Username = "PeterPiper"
                        },
                        new
                        {
                            Id = 5,
                            Address = "486 CrackBaby Ave",
                            DateCreated = new DateTime(2022, 7, 27, 19, 16, 38, 638, DateTimeKind.Local).AddTicks(4337),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(1969),
                            Email = "ScarletBitch@MCUniversity.com",
                            FullName = "Wanda Maximoff",
                            Gender = "Female",
                            LastModified = new DateTime(2022, 7, 27, 19, 16, 38, 638, DateTimeKind.Local).AddTicks(4338),
                            OriginCountry = "Sokovia",
                            Password = "MissYouVision",
                            PhoneNumber = "(555)-127-1237",
                            Username = "WandaWitchin"
                        });
                });

            modelBuilder.Entity("CourseEntityStudent", b =>
                {
                    b.HasOne("MCUniverse.Data.Entities.CourseEntity", null)
                        .WithMany()
                        .HasForeignKey("coursesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MCUniverse.Data.Entities.Student", null)
                        .WithMany()
                        .HasForeignKey("studentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MCUniverse.Data.Entities.CourseEntity", b =>
                {
                    b.HasOne("MCUniverse.Data.Entities.Faculty", "faculty")
                        .WithMany("Courses")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("faculty");
                });

            modelBuilder.Entity("MCUniverse.Data.Entities.Faculty", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
